package pd7.foodrutbot.service;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import lombok.extern.slf4j.Slf4j;
import org.json.JSONArray;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.groupadministration.GetChat;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.Chat;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import pd7.foodrutbot.config.BotConfig;
import pd7.foodrutbot.entities.MenuItems;
import pd7.foodrutbot.entities.OrderItem;
import pd7.foodrutbot.entities.OrderList;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;

@Slf4j
@Component
public class TelegramBot extends TelegramLongPollingBot {

    private final BotConfig botConfig;

    public TelegramBot(BotConfig botConfig) {
        this.botConfig = botConfig;
    }

    @Override
    public String getBotUsername() {
        return botConfig.getBotName();
    }

    @Override
    public String getBotToken() {
        return botConfig.getToken();
    }

    @Autowired
    private OrderListService orderListService;

    @Autowired
    private MenuService menuService;

    @Override
    public void onUpdateReceived(Update update) {

        if (update.hasMessage() && update.getMessage().hasText()) {
            String messageText = update.getMessage().getText();
            long chatId = update.getMessage().getChatId();

            SendMessage message = new SendMessage();

            switch (messageText) {
                case "/start":
                    startMenu(chatId);
                    break;
                case "\uD83E\uDD50 –ú–µ–Ω—é":
                    try {
                        openMenu(chatId);
                    } catch (TelegramApiException e) {
                        throw new RuntimeException(e);
                    }
                    break;
                case "\uD83D\uDCCB –¢–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑":
                    currentOrders(chatId);
                    break;
                case "\uD83D\uDC49\uD83C\uDFFB –ö–∞–∫ –ø—Ä–æ–π—Ç–∏":
                    howToPass(chatId);
                    break;
                case "‚ùî –ü–æ–º–æ—â—å":
                case "/help":
                    supportInfo(chatId);
                    break;

                default:
                    prepareAndSendMessage(chatId, "–î–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é –±–æ—Ç–∞ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç \"–ü–æ–º–æ—â—å\" –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /help");
            }

            try {
                execute(message);
            } catch (TelegramApiException e) {
                System.out.println("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: " + e.getMessage());
            }
        }
    }

    private void startMenu(long chatId) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText("<b><u>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –∫–∞—Ñ–µ ¬´–ê–∫–≤–∞—Ä–∏—É–º¬ª!</u></b>\n\n" +
                "‚Äï –ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –º–µ–Ω—é –∏ —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑, –Ω–∞–∂–º–∏—Ç–µ \n ¬´\uD83E\uDD50 –ú–µ–Ω—é¬ª.\n\n" +
                "‚Äï –£–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ \n ¬´\uD83D\uDCCB –¢–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑¬ª.\n\n" +
                "‚Äï –ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –∏–ª–∏ –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–∂–º–∏—Ç–µ \n ¬´‚ùî –ü–æ–º–æ—â—å¬ª.\n\n" +
                "‚Äï –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –∫–∞—Ñ–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \n ¬´\uD83D\uDC49\uD83C\uDFFB –ö–∞–∫ –ø—Ä–æ–π—Ç–∏¬ª.\n" +
                "\n–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∏–∂–µ.");
        message.enableHtml(true);

        ReplyKeyboardMarkup keyboardMarkup = new ReplyKeyboardMarkup();
        keyboardMarkup.setResizeKeyboard(true);
        keyboardMarkup.setOneTimeKeyboard(true);

        List<KeyboardRow> keyboardRows = new ArrayList<>();

        KeyboardRow firstRow = new KeyboardRow();
        firstRow.add("\uD83E\uDD50 –ú–µ–Ω—é");
        keyboardRows.add(firstRow);

        KeyboardRow fouthRow = new KeyboardRow();
        fouthRow.add("\uD83D\uDCCB –¢–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑");
        keyboardRows.add(fouthRow);

        KeyboardRow secondRow = new KeyboardRow();
        secondRow.add("\uD83D\uDC49\uD83C\uDFFB –ö–∞–∫ –ø—Ä–æ–π—Ç–∏");
        keyboardRows.add(secondRow);

        KeyboardRow thirdRow = new KeyboardRow();
        thirdRow.add("‚ùî –ü–æ–º–æ—â—å");
        keyboardRows.add(thirdRow);


        keyboardMarkup.setKeyboard(keyboardRows);
        message.setReplyMarkup(keyboardMarkup);

        try {
            execute(message);
        } catch (TelegramApiException e) {
            System.out.println("–æ—à–∏–±–æ—á–∫–∞");
        }
    }

    private void openMenu(long chatId) throws TelegramApiException {
        GetChat getChat = new GetChat();
        getChat.setChatId(chatId);
        Chat chat = execute(getChat);
        String username = chat.getFirstName();
        InlineKeyboardMarkup keyboardMarkup = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();

        InlineKeyboardButton menuButton = new InlineKeyboardButton();
        menuButton.setText("\uD83C\uDF55 –ü–æ—Ä–∞ –ø–æ–¥–∫—Ä–µ–ø–∏—Ç—å—Å—è");

        menuButton.setUrl("https://t.me/FoodRUTBot/MenuList");

        keyboard.add(Collections.singletonList(menuButton));
        keyboardMarkup.setKeyboard(keyboard);

        SendMessage message = new SendMessage();
        message.setChatId(String.valueOf(chatId));
        message.setText(
                "–≠–π, " + username + "! üòé\n\n" +
                        "–ú—ã –∑–Ω–∞–µ–º, –∫–∞–∫ —Å–ª–æ–∂–Ω–æ —É—Å—Ç–æ—è—Ç—å –ø–µ—Ä–µ–¥ –≤–∫—É—Å–Ω—è—à–∫–∞–º–∏ üçîüçï. –ü–æ—ç—Ç–æ–º—É –º—ã —Å–¥–µ–ª–∞–ª–∏ –≤—Å—ë, —á—Ç–æ–±—ã —Ç–µ–±–µ –±—ã–ª–æ —É–¥–æ–±–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å! " +
                        "–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –Ω–∞—à–∏–º–∏ –±–ª—é–¥–∞–º–∏! üòã"
        );
        message.setReplyMarkup(keyboardMarkup);

        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    /*
     *  –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤ –∏ —Å—Ç–∞—Ç—É—Å
     */
    private void currentOrders(long chatId) {
        List<OrderList> orders = orderListService.getOrdersByChatId(String.valueOf(chatId));

        String text;
        if (orders != null && !orders.isEmpty()) {
            StringBuilder ordersText = new StringBuilder();

            // –§–∏–ª—å—Ç—Ä—É–µ–º –∑–∞–∫–∞–∑—ã —Å —Ç–µ–∫—É—â–∏–º —Å—Ç–∞—Ç—É—Å–æ–º "–≤ –æ—á–µ—Ä–µ–¥–∏"
            orders = orders.stream()
                    .filter(order -> order.getStatus() == OrderList.OrderStatus.–ó–ê–ö–ê–ó_–í_–û–ß–ï–†–ï–î–ò)
                    .collect(Collectors.toList());

            if (orders.isEmpty()) {
                text = "–£ –≤–∞—Å –Ω–µ—Ç —Ç–µ–∫—É—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏.";
            } else {
                for (OrderList order : orders) {
                    ordersText.append("–ó–∞–∫–∞–∑ ‚Ññ ").append(order.getOrderNumber())
                            .append("\n–°—Ç–∞—Ç—É—Å: ").append(order.getStatus()).append("\n\n");

                    // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–∞ (OrderItem)
                    for (OrderItem orderItem : order.getItems()) {
                        MenuItems menuItem = orderItem.getMenuItem();
                        int quantity = orderItem.getQuantity();

                        if (menuItem != null) {
                            ordersText.append(menuItem.getName()).append(" ")
                                    .append(quantity).append(" —à—Ç. - ")
                                    .append(menuItem.getPrice().multiply(BigDecimal.valueOf(quantity)))
                                    .append(" —Ä—É–±.\n");
                        } else {
                            ordersText.append("–ë–ª—é–¥–æ —Å ID ").append(orderItem.getMenuItem().getId())
                                    .append(" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.\n");
                        }
                    }
                    ordersText.append("\n");
                }

                text = ordersText.toString();
            }
        } else {
            text = "–£ –≤–∞—Å –Ω–µ—Ç —Ç–µ–∫—É—â–∏—Ö –∑–∞–∫–∞–∑–æ–≤.";
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        prepareAndSendMessage(chatId, text);
    }


    private void howToPass(long chatId) {
        String text = "–î–æ –∫–∞—Ñ–µ ¬´–ê–∫–≤–∞—Ä–∏—É–º¬ª –º–æ–∂–Ω–æ –ø–æ–ø–∞—Å—Ç—å —Å –¥–≤—É—Ö –ö–ü–ü:\n\n" +
                "\uD83D\uDEAA *–° –ø–µ—Ä–≤–æ–≥–æ –ö–ü–ü*: –ò–¥–∏—Ç–µ –≤–¥–æ–ª—å –ø–µ—Ä–≤–æ–≥–æ –∫–æ—Ä–ø—É—Å–∞, –Ω–∞–ø—Ä–æ—Ç–∏–≤ –≤—Ö–æ–¥–∞ –≤ —à–µ—Å—Ç–æ–π –∫–æ—Ä–ø—É—Å –Ω–∞–π–¥–µ—Ç–µ –∫–∞—Ñ–µ.\n\n" +
                "\uD83D\uDEAA *–°–æ –≤—Ç–æ—Ä–æ–≥–æ –ö–ü–ü*: –ü—Ä–æ–π–¥–∏—Ç–µ –ø–æ–¥ –∞—Ä–∫–æ–π —Ç—Ä–µ—Ç—å–µ–≥–æ –∫–æ—Ä–ø—É—Å–∞ –∏ –¥–≤–∏–≥–∞–π—Ç–µ—Å—å –≤–¥–æ–ª—å —à–µ—Å—Ç–æ–≥–æ ‚Äî –∫–∞—Ñ–µ –±—É–¥–µ—Ç —Å–æ–≤—Å–µ–º —Ä—è–¥–æ–º.\n\n" +
                "–ó–∞—Ö–æ–¥–∏—Ç–µ, –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∞—Å –≤–∏–¥–µ—Ç—å!";
        SendPhoto sendPhoto = new SendPhoto();
        sendPhoto.setChatId(String.valueOf(chatId));
        sendPhoto.setPhoto(new InputFile("https://sun9-27.userapi.com/impg/duj2FVwWPk7MdhY4hC-po5I7D7Ux1LLk_8t2Xw/jPW77ZbOho0.jpg?size=859x685&quality=95&sign=d1a9ea5b0d1e25ab125a663a88f78052&type=album"));
        sendPhoto.setCaption(text);
        sendPhoto.setParseMode("Markdown");
        try{
            execute(sendPhoto);
        }catch (TelegramApiException e){
            e.printStackTrace();
        }
    }

    private void supportInfo(long chatId) {
        String text = "<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:</b>\n\n" +
                "‚Äï –ù–∞–∂–º–∏—Ç–µ ¬´\uD83E\uDD50 <b>–ú–µ–Ω—é</b>¬ª, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –º–µ–Ω—é –Ω–∞—à–µ–≥–æ –∫–∞—Ñ–µ. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–æ—è–≤–∏—Ç—Å—è –∫–Ω–æ–ø–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–Ω–µ—Å–µ—Ç –≤–∞—Å –≤ –Ω–∞—à–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞.\n\n" +
                "‚Äï –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–∫–∞–∑–∞, –Ω–∞–∂–º–∏—Ç–µ ¬´\uD83D\uDCCB <b>–¢–µ–∫—É—â–∏–π –∑–∞–∫–∞–∑</b>¬ª. –í—ã —É–≤–∏–¥–∏—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∏ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞.\n\n" +
                "‚Äï –î–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–º, –∫–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è –¥–æ –∫–∞—Ñ–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ¬´\uD83D\uDC49\uD83C\uDFFB <b>–ö–∞–∫ –ø—Ä–æ–π—Ç–∏</b>¬ª.\n\n" +
                "–í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∏–∂–µ.";
        prepareAndSendMessage(chatId,text);
    }

    public void sendUserNotification(String chatId, String text) {
        prepareAndSendMessage(Long.parseLong(chatId), text);
    }

    private void prepareAndSendMessage(long chatId, String textToSend){
        SendMessage message = new SendMessage();
        message.setChatId(String.valueOf(chatId));
        message.setText(textToSend);
        message.enableHtml(true);
        try {
            execute(message);
        } catch (TelegramApiException e) {
            System.out.println(e);
        }
    }
}
